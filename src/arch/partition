#!/bin/bash

# PARTITIONING SCHEME
# ============================================================================
# Here we listing existing disk and partitions to select disk to use, format
# it and create required partitions. Required onces are:
#
#     SYSTEM......: /mnt
#     BOOT........: /mnt/boot
#     SWAP........: no mount point
#     HOME........: /mnt/home
#
# We use partprobe to inform system changes and add sleep 1s just after
# to prevent unreconized system changes.
# More informations on partitioning are available in the official
# documentation: https://wiki.archlinux.org/index.php/Partitioning

_partition() {

    _info "Listing disk and partitions"

    # Select disk to use
    until [[ ${_disk} =~ ^(sd|hd|nvme0n)[a-z0-9]{1}$ ]]; do
        fdisk -l
        _prompt "Enter disk to use:" "(e.g., sda, nvme0n1)"
        read -r _disk
    done

    # Define partition order
    if [[ ${_disk} =~ "nvme0n" ]]; then
        export part_order=(0 p1 p2 p3 p4)
    else
        export part_order=(0 1 2 3 4)
    fi

    # Create MBR or GPT Table
    fdisk -l /dev/${_disk}
    _note "WARNING! This will erase the entire drive."
    _confirm "Setting ${part_table} partition table on /dev/${_disk}"
    if [[ ${confirm} == "y" ]]; then
        wipefs -fa /dev/${_disk}
        printf ${part_code}"\nw" | fdisk /dev/${_disk}
        partprobe /dev/${_disk}
    else
        _error "aborted by user! HDD dedicated is required."
    fi
    unset confirm

    # Get BOOT partition size
    until [[ ${boot_size} =~ ^[0-9]{1,3}(M|G){1} \
    || ${boot_size,,} == "y" ]]; do
        _note "Partition size {M,G} [default: 512M]"
        _prompt "Boot partition size:" "default [y]"
        read -r boot_size
    done
    if [[ ${boot_size,,} == "y" ]]; then
        boot_size="512M"
    fi

    # Create BOOT partition on /dev/xxx1
    _info "Setting boot of ${boot_size} on /dev/${_disk}${part_order[1]}"
    printf "n\n${part_type}\n\n+${boot_size}\nw\n" | fdisk /dev/${_disk}
    partprobe /dev/${_disk} && sleep 1s
    yes | _check mkfs.${boot_filesystem} /dev/${_disk}${part_order[1]}

    # Get SWAP partition size
    until [[ ${swap_size} =~ ^[0-9]{1,3}(M|G){1} \
    || ${swap_size,,} == "y" ]]; do
        _note "Partition size {M,G} [default: 2G]"
        _prompt "Swap partition size:" "default [y]"
        read -r swap_size
    done
    if [[ ${swap_size,,} == "y" ]]; then
        swap_size="2G"
    fi

    # Create SWAP partition on /dev/xxx2
    _info "Setting Swap of ${swap_size} on /dev/${_disk}${part_order[2]}"
    printf "n\n${part_type}\n\n+${swap_size}\nw" | fdisk /dev/${_disk}
    partprobe /dev/${_disk} && sleep 1s
    yes | _check mkswap /dev/${_disk}${part_order[2]}

    # Get SYSTEM partiton size
    until [[ ${sys_size} =~ ^[0-9]{1,3}(G|T|P){1} \
    || ${sys_size,,} == "y" ]]; do
        _note "Partition size {G,T,P} [default: 25G]"
        _prompt "System partition size:" "default [y]"
        read -r sys_size
    done
    if [[ ${sys_size,,} == "y" ]]; then
        sys_size="25G"
    fi

    # Create SYSTEM partition on /dev/xxx3
    _info "Setting System of ${sys_size} on /dev/${_disk}${part_order[3]}"
    printf "n\n${part_type}\n\n+${sys_size}\nw" | fdisk /dev/${_disk}
    partprobe /dev/${_disk} && sleep 1s
    yes | _check mkfs.ext4 /dev/${_disk}${part_order[3]}

    # HOME partiton
    if [[ ${FIRMWARE} == "UEFI" ]]; then

        # Get HOME partiton size
        until [[ ${home_size} =~ ^[0-9]{1,3}(G|T|P){1} \
        || ${home_size,,} == "y" ]]; do
            _note "Partition size {G,T,P} [default: free space]"
            _prompt "Home partition size:" "default [y]"
            read -r home_size
        done

        # Define HOME partition size
        if [[ ${home_size,,} == "y" ]]; then
            part_size="free space"
            home_size=""
        else
            part_size=${home_size}
            home_size="+"${home_size}
        fi

        # Create HOME partition on /dev/xxx4
        _info "Setting Home of ${part_size} on /dev/${_disk}${part_order[4]}"
        printf "n\n\n\n${home_size}\nw" | fdisk /dev/${_disk}
    else
        _note "Home partition will use all free space"
        _info "Setting Home on /dev/${_disk}${part_order[4]}"
        printf "n\n${part_type}\n\nw" | fdisk /dev/${_disk}
    fi
    partprobe /dev/${_disk} && sleep 1s
    yes | _check mkfs.ext4 /dev/${_disk}${part_order[4]}

    # Export required vars
    export _disk
    export _boot="/dev/${_disk}${part_order[1]}"
    export _swap="/dev/${_disk}${part_order[2]}"
    export _system="/dev/${_disk}${part_order[3]}"
    export _home="/dev/${_disk}${part_order[4]}"
}

custom_partition() {

    _info "Listing disk and partitions"

    # Select boot
    until [[ ${_bt} =~ ^(sd|hd|nvme0n)[a-z0-9]{1,3}$ ]]; do
        fdisk -l
        _prompt "Enter partition for boot:" "(e.g., sda2, nvme0n1p2)"
        read -r _bt
    done

    # Select swap
    until [[ ${_swp} =~ ^(sd|hd|nvme0n)[a-z0-9]{1,3}$ ]]; do
        fdisk -l
        _prompt "Enter partition for swap:" "(e.g., sda3, nvme0n1p3)"
        read -r _swp
    done

    # Select system
    until [[ ${_sys} =~ ^(sd|hd|nvme0n)[a-z0-9]{1,3}$ ]]; do
        fdisk -l
        _prompt "Enter partition for system:" "(e.g., sda1, nvme0n1p1)"
        read -r _sys
    done

    # Select home
    until [[ ${_hm} =~ ^(sd|hd|nvme0n)[a-z0-9]{1,3}$ ]]; do
        fdisk -l
        _prompt "Enter partition for home:" "(e.g., sda4, nvme0n1p4)"
        read -r _hm
    done

    # Export required vars
    if [[ ${_bt} =~ "nvme0n" ]]; then
        export _disk=${_bt%p*}
    else
        export _disk=${_bt//[0-9]}
    fi
    export _boot="/dev/${_bt}"
    export _swap="/dev/${_swp}"
    export _system="/dev/${_sys}"
    export _home="/dev/${_hm}"
}
