#!/bin/bash

# USER INFORMATIONS
# ============================================================================
# Here we prompt all required informations to the user and stored them.
# Required informations:
#
#      Language.......: list of avalaible language code is in the wiki
#      TimeZone.......: list of available timezone code is in the wiki
#      Hostname.......: a computer name such as <my-favorite-computer>
#      Root passwd....: secure password must be used
#      Username.......: an username such as <bobby>
#      User passwd....: secure password must be used
#      User rights....: add user to all groups and ALL power in sudoers
#
# More informations on installation steps are available in the wiki:
# https://github.com/grm34/archboot/wiki/Installation-step-by-step

_ask_user_informations() {

    # Language
    language=fr_FR
    keymap_code=$(echo ${language} | cut -d'_' -f 1)

    # TimeZone
    timezone=Europe/Paris
    
    # Hostname
    until [[ ${#HOST_name} -ge 3 \
    && ${HOST_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter hostname:" "(e.g., my-favorite-computer)"
        read -r HOST_name
    done

    # Root Password
    until [[ ${#a} -ge 8 && "${a}" == *[a-z]* && "${a}" == *[0-9]* ]]; do
        _note \
"password should be at least 8 chars long with 1 letter and 1 digit"
        _prompt "Enter password for root:"
        read -rs a
    done
    echo

    # Confirm Root Password
    _prompt "Confirm password for root:"
    read -rs ROOT_passwd
    if [[ ${ROOT_passwd} != "${a}" ]]; then
        _error "passwords does not match!"
    fi
    echo

    # Username
    until [[ ${#USER_name} -ge 3 \
    && ${USER_name} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter username:" "(e.g., johnny)"
        read -r USER_name
    done

    # User Password
    until [[ ${#b} -ge 8 && "${b}" == *[a-z]* && "${b}" == *[0-9]* ]]; do
        _note \
"password should be at least 8 chars long with 1 letter and 1 digit"
        _prompt "Enter password for user ${USER_name}:"
        read -rs b
    done
    echo

    # Confirm User Password
    _prompt "Confirm password for user ${USER_name}:"
    read -rs USER_passwd
    if [[ ${USER_passwd} != "${b}" ]]; then
        _error "passwords does not match!"
    fi
    echo

    # User Rights
    _confirm "Give all rights to user ${USER_name}?"
    case ${confirm} in y|Y) export power="yes";; esac
    unset confirm
    
    # Export required vars
    export language; export keymap_code; export timezone
    export HOST_name; export ROOT_passwd; export USER_name; export USER_passwd
}
